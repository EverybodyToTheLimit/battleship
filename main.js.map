{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ,IAA2B;AACnC;AACA,+CAA+C;AAC/C;AACA,QAAQ,cAAc,WAAW;AACjC,2CAA2C;AAC3C;AACA;AACA;AACA,SAAS,EAGJ;;AAEL,CAAC;AACD;;AAEA,qBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,WAAW;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,WAAW;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;ACtWoC;;AAErC,uBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,8CAA8C;AAC9C;AACA,mDAAmD;AACnD;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACpIwC;AACD;AACL;AACJ;AACA;;AAE9B,4BAA4B;AAC5B,aAAa,gDAAM;AACnB,cAAc,gDAAM;AACpB,uBAAuB,qDAAS;AAChC,kBAAkB,qDAAS;AAC3B;;AAEA;AACA,kBAAkB,sDAAS;AAC3B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAAI;AAC1B,yBAAyB,4CAAI;AAC7B,sBAAsB,4CAAI;AAC1B,wBAAwB,4CAAI;AAC5B,wBAAwB,4CAAI;AAC5B;AACA;AACA,oCAAoC,qCAAqC,MAAM;AAC/E;AACA;AACA,6EAA6E,QAAQ,MAAM,4DAA4D;;;;AAIvJ;;AAEA,KAAK;;;;;;AAML;;AAEA;;AAEA;AACA,cAAc,sDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAgB;;AAEhC;;AAEA;;;;;;;;;;;;;;;;;;;ACvFA;;AAEA,wBAAwB;;AAExB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,aAAa;;AAEb;;AAEA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,aAAa;AACb;AACA;;;;AAIA,yCAAyC;AACzC;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;;AAEL;AACA,wBAAwB,MAAM;AAC9B,4BAA4B,MAAM;AAClC;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClLA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACNA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;ACJwC;;AAExC,sDAAY,E","sources":["webpack://battleship/./node_modules/pubsub-js/src/pubsub.js","webpack://battleship/./src/dom-helper.js","webpack://battleship/./src/game.js","webpack://battleship/./src/gameboard.js","webpack://battleship/./src/players.js","webpack://battleship/./src/ships.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/compat get default export","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/webpack/runtime/node module decorator","webpack://battleship/./src/index.js"],"sourcesContent":["/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory){\n    'use strict';\n\n    var PubSub = {};\n\n    if (root.PubSub) {\n        PubSub = root.PubSub;\n        console.warn(\"PubSub already loaded, using existing version\");\n    } else {\n        root.PubSub = PubSub;\n        factory(PubSub);\n    }\n    // CommonJS and Node.js module support\n    if (typeof exports === 'object'){\n        if (module !== undefined && module.exports) {\n            exports = module.exports = PubSub; // Node.js specific `module.exports`\n        }\n        exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n        module.exports = exports = PubSub; // CommonJS\n    }\n    // AMD support\n    /* eslint-disable no-undef */\n    else if (typeof define === 'function' && define.amd){\n        define(function() { return PubSub; });\n        /* eslint-enable no-undef */\n    }\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n    'use strict';\n\n    var messages = {},\n        lastUid = -1,\n        ALL_SUBSCRIBING_MSG = '*';\n\n    function hasKeys(obj){\n        var key;\n\n        for (key in obj){\n            if ( Object.prototype.hasOwnProperty.call(obj, key) ){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a function that throws the passed exception, for use as argument for setTimeout\n     * @alias throwException\n     * @function\n     * @param { Object } ex An Error object\n     */\n    function throwException( ex ){\n        return function reThrowException(){\n            throw ex;\n        };\n    }\n\n    function callSubscriberWithDelayedExceptions( subscriber, message, data ){\n        try {\n            subscriber( message, data );\n        } catch( ex ){\n            setTimeout( throwException( ex ), 0);\n        }\n    }\n\n    function callSubscriberWithImmediateExceptions( subscriber, message, data ){\n        subscriber( message, data );\n    }\n\n    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n        var subscribers = messages[matchedMessage],\n            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n            s;\n\n        if ( !Object.prototype.hasOwnProperty.call( messages, matchedMessage ) ) {\n            return;\n        }\n\n        for (s in subscribers){\n            if ( Object.prototype.hasOwnProperty.call(subscribers, s)){\n                callSubscriber( subscribers[s], originalMessage, data );\n            }\n        }\n    }\n\n    function createDeliveryFunction( message, data, immediateExceptions ){\n        return function deliverNamespaced(){\n            var topic = String( message ),\n                position = topic.lastIndexOf( '.' );\n\n            // deliver the message as it is now\n            deliverMessage(message, message, data, immediateExceptions);\n\n            // trim the hierarchy and deliver message to each level\n            while( position !== -1 ){\n                topic = topic.substr( 0, position );\n                position = topic.lastIndexOf('.');\n                deliverMessage( message, topic, data, immediateExceptions );\n            }\n\n            deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n        };\n    }\n\n    function hasDirectSubscribersFor( message ) {\n        var topic = String( message ),\n            found = Boolean(Object.prototype.hasOwnProperty.call( messages, topic ) && hasKeys(messages[topic]));\n\n        return found;\n    }\n\n    function messageHasSubscribers( message ){\n        var topic = String( message ),\n            found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n            position = topic.lastIndexOf( '.' );\n\n        while ( !found && position !== -1 ){\n            topic = topic.substr( 0, position );\n            position = topic.lastIndexOf( '.' );\n            found = hasDirectSubscribersFor(topic);\n        }\n\n        return found;\n    }\n\n    function publish( message, data, sync, immediateExceptions ){\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        var deliver = createDeliveryFunction( message, data, immediateExceptions ),\n            hasSubscribers = messageHasSubscribers( message );\n\n        if ( !hasSubscribers ){\n            return false;\n        }\n\n        if ( sync === true ){\n            deliver();\n        } else {\n            setTimeout( deliver, 0 );\n        }\n        return true;\n    }\n\n    /**\n     * Publishes the message, passing the data to it's subscribers\n     * @function\n     * @alias publish\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publish = function( message, data ){\n        return publish( message, data, false, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Publishes the message synchronously, passing the data to it's subscribers\n     * @function\n     * @alias publishSync\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publishSync = function( message, data ){\n        return publish( message, data, true, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n     * @function\n     * @alias subscribe\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { String }\n     */\n    PubSub.subscribe = function( message, func ){\n        if ( typeof func !== 'function'){\n            return false;\n        }\n\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        // message is not registered yet\n        if ( !Object.prototype.hasOwnProperty.call( messages, message ) ){\n            messages[message] = {};\n        }\n\n        // forcing token as String, to allow for future expansions without breaking usage\n        // and allow for easy use as key names for the 'messages' object\n        var token = 'uid_' + String(++lastUid);\n        messages[message][token] = func;\n\n        // return token for unsubscribing\n        return token;\n    };\n\n    PubSub.subscribeAll = function( func ){\n        return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n    };\n\n    /**\n     * Subscribes the passed function to the passed message once\n     * @function\n     * @alias subscribeOnce\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { PubSub }\n     */\n    PubSub.subscribeOnce = function( message, func ){\n        var token = PubSub.subscribe( message, function(){\n            // before func apply, unsubscribe message\n            PubSub.unsubscribe( token );\n            func.apply( this, arguments );\n        });\n        return PubSub;\n    };\n\n    /**\n     * Clears all subscriptions\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     */\n    PubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n        messages = {};\n    };\n\n    /**\n     * Clear subscriptions by the topic\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     * @return { int }\n     */\n    PubSub.clearSubscriptions = function clearSubscriptions(topic){\n        var m;\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                delete messages[m];\n            }\n        }\n    };\n\n    /**\n       Count subscriptions by the topic\n     * @function\n     * @public\n     * @alias countSubscriptions\n     * @return { Array }\n    */\n    PubSub.countSubscriptions = function countSubscriptions(topic){\n        var m;\n        // eslint-disable-next-line no-unused-vars\n        var token;\n        var count = 0;\n        for (m in messages) {\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n                for (token in messages[m]) {\n                    count++;\n                }\n                break;\n            }\n        }\n        return count;\n    };\n\n\n    /**\n       Gets subscriptions by the topic\n     * @function\n     * @public\n     * @alias getSubscriptions\n    */\n    PubSub.getSubscriptions = function getSubscriptions(topic){\n        var m;\n        var list = [];\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                list.push(m);\n            }\n        }\n        return list;\n    };\n\n    /**\n     * Removes subscriptions\n     *\n     * - When passed a token, removes a specific subscription.\n     *\n\t * - When passed a function, removes all subscriptions for that function\n     *\n\t * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n     * @function\n     * @public\n     * @alias subscribeOnce\n     * @param { String | Function } value A token, function or topic to unsubscribe from\n     * @example // Unsubscribing with a token\n     * var token = PubSub.subscribe('mytopic', myFunc);\n     * PubSub.unsubscribe(token);\n     * @example // Unsubscribing with a function\n     * PubSub.unsubscribe(myFunc);\n     * @example // Unsubscribing from a topic\n     * PubSub.unsubscribe('mytopic');\n     */\n    PubSub.unsubscribe = function(value){\n        var descendantTopicExists = function(topic) {\n                var m;\n                for ( m in messages ){\n                    if ( Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0 ){\n                        // a descendant of the topic exists:\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            isTopic    = typeof value === 'string' && ( Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value) ),\n            isToken    = !isTopic && typeof value === 'string',\n            isFunction = typeof value === 'function',\n            result = false,\n            m, message, t;\n\n        if (isTopic){\n            PubSub.clearSubscriptions(value);\n            return;\n        }\n\n        for ( m in messages ){\n            if ( Object.prototype.hasOwnProperty.call( messages, m ) ){\n                message = messages[m];\n\n                if ( isToken && message[value] ){\n                    delete message[value];\n                    result = value;\n                    // tokens are unique, so we can just stop here\n                    break;\n                }\n\n                if (isFunction) {\n                    for ( t in message ){\n                        if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value){\n                            delete message[t];\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}));\n","import { mainGameLoop } from \"./game\"\n\nfunction domHelper() { return {\n\n    drawBoard(user) {\n\n    let main = document.getElementById(\"main\")\n    let owner = document.createElement('div')\n    owner.className = user\n        for (let i = 10; i>0; i--) {\n            let row = document.createElement('div')\n            row.className = \"row\"\n            for (let j = 1; j<11; j++) {\n                let field = document.createElement('div')\n                field.className = \"field\"\n                field.id = user + \"x\" + j + \"y\" + i\n                field.addEventListener('dragenter', (e) => {\n                    PubSub.publish('drag', e)})\n                field.addEventListener('dragOver', (e) => {\n                    PubSub.publish('drag', e)})\n                field.addEventListener('dragleave', (e) => {\n                    PubSub.publish('dragLeave', e)})\n                field.addEventListener('drop', (e) => {\n                    PubSub.publish('drop', e)})\n                if (user == \"computer\") {\n                    field.addEventListener('click', () => {\n                        PubSub.publish('button-click', [j, i]);\n                    })\n                }\n                row.appendChild(field)\n            }\n            owner.appendChild(row)\n        }\n    main.appendChild(owner)\n\n    this.draggAndDrop()\n\n    },\n\n    draggAndDrop () {\n        var dragover = function (msg, data) {\n            data.preventDefault();\n            data.target.classList.add('drag-over');\n        }\n        var dragleave = function (msg, data) {\n            data.preventDefault();\n            data.target.classList.remove('drag-over');\n        }\n        var drop = function (msg, data) {\n            data.target.classList.remove('drag-over');\n\n            // get the draggable element\n            const id = data.dataTransfer.getData('text/plain');\n            const draggable = document.getElementById(id);\n\n            // add it to the drop target\n            data.target.appendChild(draggable);\n\n            // display the draggable element\n            draggable.classList.remove('hide');\n        }\n\n        var dragstart = function(message, data) {\n            data.dataTransfer.setData('text/plain', data.target.id);\n            setTimeout(() => {\n                data.target.classList.add('hide');\n            }, 0);\n        }\n\n        PubSub.subscribe('drag', dragover);\n        PubSub.subscribe('dragLeave', dragleave);\n        PubSub.subscribe('drop', drop);\n        PubSub.subscribe('dragstart', dragstart);\n    \n\n    },\n    \n    \n    drawShipsManual() {\n        let main = document.getElementById(\"main\")\n        let shipList = [\"carrier\", \"battleship\", \"cruiser\", \"submarine\", \"destroyer\"]\n\n        let shipContainer = document.createElement(\"div\")\n        shipContainer.id = \"shipcontainer\"\n\n        shipList.forEach(el => {\n            let el1 = document.createElement(\"div\")\n            el1.id = el\n            el1.className = \"ship\"\n            el1.draggable = true\n            el1.addEventListener('dragstart', (e) => {\n                PubSub.publish('dragstart', e)\n            })\n            shipContainer.appendChild(el1)\n        })\n  \n        main.appendChild(shipContainer)\n    },\n\n    updateCell (user, x, y, type)\n        {\n            let cell = document.getElementById(user + \"x\"+x+\"y\"+ y)\n            switch (type) {\n                case \"miss\":\n                    cell.classList.add(\"miss\")\n                    break\n                case \"hit\":\n                    cell.classList.add(\"hit\")\n            }\n        },\n\n    markShips(board, user) {\n        if (user !== \"computer\") {\n        board.forEach(element => {\n            let cell = document.getElementById(user + \"x\"+element.x+\"y\"+element.y)\n            {cell.textContent = \"x\"}\n        });\n\n        }\n        else {\n            \n        board.forEach(element => {\n            let cell = document.getElementById(user + \"x\"+element.x+\"y\"+element.y)\n            { if (element.hit == true) {   \n                cell.textContent = \"x\"\n            }\n            }})\n\n        }\n    }\n}\n\n}\n\nexport {domHelper}","import { domHelper } from \"./dom-helper\"\nimport { gameboard } from \"./gameboard\"\nimport { player } from \"./players\"\nimport { ship } from \"./ships\"\nimport PubSub from 'pubsub-js'\n\nfunction game(playername) { return {\n    player1: player(playername, false),\n    player2 : player(\"computer\", true),\n    player1Gameboard : gameboard(),\n    cpuGameboard: gameboard(),\n    currentTurn: \"\",\n\n    refresh() {\n        let dom = domHelper()\n        // dom.drawBoard(this.player2.name)\n        dom.drawBoard(this.player1.name)\n        // dom.markShips(this.player1Gameboard.coordinates, this.player1.name)\n    },\n\n    deployShips(player) {\n        let playerboard = null\n        let randomNumber = () => {\n            let result = Math.floor(Math.random() * 10) + 1\n            return result}\n        let carrier = ship(5, \"carrier\")\n        let battleship = ship(4, \"battleship\")\n        let cruiser = ship(3, \"cruiser\")\n        let submarine = ship(3, \"submarine\")\n        let destroyer = ship(2, \"destroyer\")\n        let shipArr = []\n        shipArr.push(carrier, battleship, cruiser, submarine,destroyer)\n        if(player == this.player1) {playerboard = this.player1Gameboard} else {playerboard = this.cpuGameboard}\n        \n        shipArr.forEach(ship => {\n            if (playerboard.placeShip(ship,randomNumber(), randomNumber())) {return} else {playerboard.placeShip(ship,randomNumber(), randomNumber())}})\n\n\n\n        return playerboard.coordinatess\n\n    },\n\n\n\n\n\n}\n\n}\n\nfunction mainGameLoop () {\n    let dom = domHelper()\n    let newGame = game(\"John\")\n    newGame.deployShips(newGame.player1)\n    newGame.deployShips(newGame.player2)\n    newGame.cpuGameboard.populateMoves()\n    newGame.refresh()\n    dom.drawShipsManual()\n    var mySubscriber = function (msg, data) {\n        let result = newGame.cpuGameboard.receiveAttack(data[0], data[1])\n        if (typeof result == \"object\") {\n        dom.updateCell(\"computer\", data[0], data[1],\"miss\")\n        }\n        else {dom.updateCell(\"computer\", data[0], data[1],\"hit\")}\n        if (newGame.cpuGameboard.checkGameEnd()) console.log(newGame.player1.name + \" wins!\" )\n\n        let cpuCoordinates = newGame.cpuGameboard.launchAttack()\n        let resultcpu = newGame.player1Gameboard.receiveAttack(cpuCoordinates[0], cpuCoordinates[1])\n        if (typeof resultcpu == \"object\") {\n        dom.updateCell(newGame.player1.name, cpuCoordinates[0], cpuCoordinates[1],\"miss\")\n        }\n        else {\n            dom.updateCell(newGame.player1.name, cpuCoordinates[0], cpuCoordinates[1],\"hit\");\n            newGame.cpuGameboard.hitHunt(cpuCoordinates)\n        }\n        \n        \n        if (newGame.player1Gameboard.checkGameEnd()) {\n            console.log(newGame.player2.name + \" wins!\" )\n            return\n        }\n    };\n    var token = PubSub.subscribe('button-click', mySubscriber);\n\n    \n\n}\n\n\n\nexport {\n        game,\n        mainGameLoop\n    }","// create the main gameboard\n\nfunction gameboard () { return {\n\n    possibleMoves: [],\n\n    coordinates: [],\n\n    missedShots: [],\n\n    targetOptions: [],\n\n    evaluatePlacement(ship, x, y) {\n        let possiblePlacements = []\n        let placementsClone = []\n        \n        for (let i=0; i<ship.length; i++) {\n            let coordsRight = {\n                \"x\" : (x + i),\n                \"y\" : y,\n                \"pos\": 1\n            }\n            let coordsLeft = {\n                \"x\" : (x - i),\n                \"y\" : y,\n                \"pos\": 2\n            }\n            let coordsTop = {\n                \"x\" : x,\n                \"y\" : (y + i),\n                \"pos\": 3\n            }\n            let coordsBottom = {\n                \"x\" : x,\n                \"y\" : (y - i),\n                \"pos\": 4\n            }\n        possiblePlacements.push(coordsRight, coordsLeft, coordsTop, coordsBottom)\n        }\n        let toRemove = []\n        for (let i = 0; i<possiblePlacements.length; i ++) {\n            if (possiblePlacements[i].x > 10 || possiblePlacements[i].y >10 || possiblePlacements[i].x <1 || possiblePlacements[i].y <1) {\n                toRemove.push(possiblePlacements[i].pos)\n            }\n        }\n\n        toRemove = toRemove.filter((value, index, array) => array.indexOf(value) === index)\n        if (toRemove) {\n            toRemove.forEach(el => {\n                possiblePlacements = possiblePlacements.filter(function(value, index, array){\n                return value.pos !== el\n            }) \n\n            })\n\n        }\n\n        let notUnique = []\n        for (let i = 0; i<possiblePlacements.length; i ++) {\n            this.coordinates.forEach(el => {\n            if (possiblePlacements[i].x == el.x && possiblePlacements[i].y  == el.y) {\n                notUnique.push(possiblePlacements[i].pos)\n            }\n        })\n        }\n\n        notUnique = notUnique.filter((value, index, array) => array.indexOf(value) === index)\n        if (notUnique) {\n            notUnique.forEach(el => {\n                possiblePlacements = possiblePlacements.filter(function(value, index, array){\n                return value.pos !== el\n            }) \n\n            })\n            return possiblePlacements\n        }\n\n\n\n    if (possiblePlacements.length == 0) {return false}\n    else return possiblePlacements\n    },\n\n\n    placeShip(ship, x, y) {\n        let evaluation = this.evaluatePlacement(ship, x, y)\n        if (evaluation == false) return false\n        else {\n            let options = [...new Set(evaluation.map(item=>item.pos))]\n            let selection = options[Math.floor(Math.random() * options.length)]\n            evaluation = evaluation.filter(el => el.pos == selection)\n            let i = evaluation.length\n            evaluation.forEach(el => {\n                let placedShip = {\n                    x: el.x,\n                    y: el.y,\n                    name: ship.name,\n                    hit: false\n                }\n                this.coordinates.push(placedShip)\n            })\n            return evaluation\n        }\n    },\n\n    populateMoves() {\n        for(let x =  1; x<11; x++) {\n            for (let y = 1; y<11; y++) {\n                this.possibleMoves.push([x, y])\n            }\n        }\n    },\n\n    launchAttack() {\n\n        if (this.targetOptions.length == 0) {\n        const randomIndex = Math.floor(Math.random() * this.possibleMoves.length);\n        let result = this.possibleMoves[randomIndex]\n        this.possibleMoves.splice(randomIndex,1)\n        return result\n        }\n        else {\n            let result = this.targetOptions[0];\n            this.targetOptions.splice(0,1)\n            return result\n        }\n\n    },\n\n    hitHunt(coords) {\n        let tempArray = []\n        tempArray.push([coords[0] -1 , coords[1]], [coords[0] +1 , coords[1]], [coords[0], coords[1] -1], [coords[0], coords[1] + 1])\n        tempArray = tempArray.filter(function(el) {\n            return el[0] < 11 && el[0] > 0 && el[1] < 11 && el[1]\n        })\n        tempArray.forEach(el => {\n            for (let i=0; i<this.possibleMoves.length; i++) {\n                if (el[0] == this.possibleMoves[i][0] && el[1] == this.possibleMoves[i][1]) {\n                    this.targetOptions.push(el)\n                    this.possibleMoves.splice(i, 1)\n                }\n            }\n            }\n        )\n\n\n        },\n\n\n    receiveAttack(x, y) {\n        let hitCheck = this.coordinates.find(element => {\n            if (element.x == x && element.y == y) {\n                return element\n            }})\n        if (hitCheck) {\n            hitCheck.hit = true\n            return hitCheck.name\n        }\n        else {\n            let missedShot = {x, y}\n            this.missedShots.push(missedShot)\n            return {\n                \"missed\" : missedShot\n            }\n        }\n    },\n\n    checkGameEnd() {\n        let result = true\n        this.coordinates.forEach(element => {\n            if (element.hit == false) {\n                result = false\n            }\n        } \n        )\n    return result\n    }\n}\n}\n\nexport {gameboard}","function player (name, cpu) { return {\n\n    name: name,\n    cpu: cpu,\n    currentTurn: false\n}\n}\n\nexport {player}","// create a factory for individual ships\n\nfunction ship (length, name) {return {\n    name: name,\n    length: length,\n    hits: 0,\n    hitReceived() {\n        this.hits = this.hits + 1\n        if (this.length == this.hits) {\n            this.isSunk = true\n        }\n    },\n    isSunk: false,\n}}\n\nexport {ship}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import { mainGameLoop} from \"./game.js\";\n\nmainGameLoop()"],"names":[],"sourceRoot":""}