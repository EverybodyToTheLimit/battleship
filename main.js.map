{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAAuC;AACL;;;AAGlC;AACA,kBAAkB,gDAAM;AACxB,kBAAkB,gDAAM;AACxB,2BAA2B,qDAAS;AACpC,2BAA2B,qDAAS;;AAEpC;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbA;;AAEA,wBAAwB;;AAExB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;;;AAGA;AACA;AACA,kCAAkC;AAClC;AACA,KAAK;;;AAGL,yCAAyC;AACzC;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/GA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;;;;;;;UCNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNiC;;AAEjC,YAAY,8CAAI,G","sources":["webpack://battleship/./src/game.js","webpack://battleship/./src/gameboard.js","webpack://battleship/./src/players.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["import { gameboard } from \"./gameboard\"\nimport { player } from \"./players\"\n\n\nfunction game () {\n    let player1 = player(\"John\", false)\n    let player2 = player(\"Computer\", true)\n    let player1Gameboard = gameboard()\n    let player2Gameboard = gameboard()\n\n    return {\n        player1\n    }\n}\n\nexport {game}","// create the main gameboard\n\nfunction gameboard () { return {\n\n    \n    coordinates: [],\n\n    missedShots: [],\n\n    evaluatePlacement(ship, x, y) {\n        let possiblePlacements = []\n        let placementsClone = []\n        \n        for (let i=0; i<ship.length; i++) {\n            let coordsRight = {\n                \"x\" : (x + i),\n                \"y\" : y,\n                \"pos\": 1\n            }\n            let coordsLeft = {\n                \"x\" : (x - i),\n                \"y\" : y,\n                \"pos\": 2\n            }\n            let coordsTop = {\n                \"x\" : x,\n                \"y\" : (y + i),\n                \"pos\": 3\n            }\n            let coordsBottom = {\n                \"x\" : x,\n                \"y\" : (y - i),\n                \"pos\": 4\n            }\n        possiblePlacements.push(coordsRight, coordsLeft, coordsTop, coordsBottom)\n        }\n\n        possiblePlacements.forEach(element => {\n            if(element.x > 10 || element.y > 10 || element.x < 1 || element.y < 1 || (this.coordinates.forEach(element1 => {\n                if (element1.x == element.x && element1.y == element.y) {return true}\n            }))) {\n                placementsClone.push(element)\n                return placementsClone\n            }\n        })\n\n    let uniqueResult = [...new Set(placementsClone.map(item=>item.pos))]\n\n\n    uniqueResult.forEach(element => {\n    possiblePlacements = possiblePlacements.filter(el => {\n        return el.pos !== element})\n    return possiblePlacements\n    })\n\n\n    if (possiblePlacements.length == 0) {return false}\n    else return possiblePlacements\n    },\n\n\n    placeShip(ship, x, y) {\n        let evaluation = this.evaluatePlacement(ship, x, y)\n        if (evaluation == false) return false\n        else {\n            let options = [...new Set(evaluation.map(item=>item.pos))]\n            let selection = options[Math.floor(Math.random() * options.length)]\n            evaluation = evaluation.filter(el => el.pos == selection)\n            let i = evaluation.length\n            evaluation.forEach(el => {\n                let placedShip = {\n                    x: el.x,\n                    y: el.y,\n                    name: ship.name,\n                    hit: false\n                }\n                this.coordinates.push(placedShip)\n            })\n            return evaluation\n        }\n    },\n\n    receiveAttack(x, y) {\n        let hitCheck = this.coordinates.find(element => {\n            if (element.x == x && element.y == y) {\n                return element\n            }})\n        if (hitCheck) {\n            hitCheck.hit = true\n            return hitCheck.name\n        }\n        else {\n            let missedShot = {x, y}\n            this.missedShots.push(missedShot)\n            return {\n                \"missed\" : missedShot\n            }\n        }\n    },\n\n    checkGameEnd() {\n        let result = true\n        this.coordinates.forEach(element => {\n            if (element.hit == false) {\n                result = false\n            }\n        } \n        )\n    return result\n    }\n}\n}\n\nexport {gameboard}","function player (name, cpu) { return {\n\n    name: name,\n    cpu: cpu,\n    currentTurn: false\n}\n}\n\nexport {player}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { game } from \"./game.js\";\n\nconsole.log(game())"],"names":[],"sourceRoot":""}