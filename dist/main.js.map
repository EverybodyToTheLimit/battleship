{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAqC;;AAErC,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA,2DAA2D,mDAAY,eAAe;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;AC9CwC;AACD;AACL;AACJ;;AAE9B,4BAA4B;AAC5B,aAAa,gDAAM;AACnB,cAAc,gDAAM;AACpB,uBAAuB,qDAAS;AAChC,kBAAkB,qDAAS;AAC3B;;AAEA;AACA,kBAAkB,sDAAS;AAC3B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAAI;AAC1B,yBAAyB,4CAAI;AAC7B,sBAAsB,4CAAI;AAC1B,wBAAwB,4CAAI;AAC5B,wBAAwB,4CAAI;AAC5B;AACA;AACA,oCAAoC,qCAAqC,MAAM;AAC/E;AACA;AACA,6EAA6E,QAAQ,MAAM,4DAA4D;;;;AAIvJ;;AAEA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;;;;;;;;;;AC/DA;;AAEA,wBAAwB;;AAExB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,aAAa;;AAEb;;AAEA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,aAAa;AACb;AACA;;;;AAIA,yCAAyC;AACzC;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnIA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNwC;;AAExC,sDAAY,E","sources":["webpack://battleship/./src/dom-helper.js","webpack://battleship/./src/game.js","webpack://battleship/./src/gameboard.js","webpack://battleship/./src/players.js","webpack://battleship/./src/ships.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["import { mainGameLoop } from \"./game\"\n\nfunction domHelper() { return {\n\n    drawBoard(user) {\n    let main = document.getElementById(\"main\")\n    let owner = document.createElement('div')\n    owner.className = user\n        for (let i = 10; i>0; i--) {\n            let row = document.createElement('div')\n            row.className = \"row\"\n            for (let j = 1; j<11; j++) {\n                let field = document.createElement('div')\n                field.className = \"field\"\n                field.id = user + \"x\" + j + \"y\" + i\n                if (user == \"computer\") {\n                    field.addEventListener('click', () => {mainGameLoop([j, i], this)})\n                }\n                row.appendChild(field)\n            }\n            owner.appendChild(row)\n        }\n    main.appendChild(owner)\n    },\n\n    markShips(board, user) {\n        if (user !== \"computer\") {\n        board.forEach(element => {\n            let cell = document.getElementById(user + \"x\"+element.x+\"y\"+element.y)\n            {cell.textContent = \"x\"}\n        });\n\n        }\n        else {\n            \n        board.forEach(element => {\n            let cell = document.getElementById(user + \"x\"+element.x+\"y\"+element.y)\n            { if (element.hit == true) {   \n                cell.textContent = \"x\"\n            }\n            }})\n\n        }\n    }\n}\n\n}\n\nexport {domHelper}","import { domHelper } from \"./dom-helper\"\nimport { gameboard } from \"./gameboard\"\nimport { player } from \"./players\"\nimport { ship } from \"./ships\"\n\nfunction game(playername) { return {\n    player1: player(playername, false),\n    player2 : player(\"computer\", true),\n    player1Gameboard : gameboard(),\n    cpuGameboard: gameboard(),\n    currentTurn: \"\",\n\n    refresh() {\n        let dom = domHelper()\n        dom.drawBoard(this.player2.name)\n        dom.drawBoard(this.player1.name)\n        dom.markShips(this.player1Gameboard.coordinates, this.player1.name)\n    },\n\n    deployShips(player) {\n        let playerboard = null\n        let randomNumber = () => {\n            let result = Math.floor(Math.random() * 10) + 1\n            return result}\n        let carrier = ship(5, \"carrier\")\n        let battleship = ship(4, \"battleship\")\n        let cruiser = ship(3, \"cruiser\")\n        let submarine = ship(3, \"submarine\")\n        let destroyer = ship(2, \"destroyer\")\n        let shipArr = []\n        shipArr.push(carrier, battleship, cruiser, submarine,destroyer)\n        if(player == this.player1) {playerboard = this.player1Gameboard} else {playerboard = this.cpuGameboard}\n        \n        shipArr.forEach(ship => {\n            if (playerboard.placeShip(ship,randomNumber(), randomNumber())) {return} else {playerboard.placeShip(ship,randomNumber(), randomNumber())}})\n\n\n\n        return playerboard.coordinatess\n\n    }\n\n\n\n\n}\n\n}\n\nfunction mainGameLoop (event, newGame) {\n    if (event !== undefined) {\n        newGame.cpuGameboard.receiveAttack()\n    }\n    else {\n    let newGame = game(\"John\")\n    newGame.deployShips(newGame.player1)\n    newGame.deployShips(newGame.player2)\n    newGame.refresh()\n    console.log(newGame)\n\n\n    }\n\n}\n\n\n\nexport {\n        game,\n        mainGameLoop\n    }","// create the main gameboard\n\nfunction gameboard () { return {\n\n    \n    coordinates: [],\n\n    missedShots: [],\n\n    evaluatePlacement(ship, x, y) {\n        let possiblePlacements = []\n        let placementsClone = []\n        \n        for (let i=0; i<ship.length; i++) {\n            let coordsRight = {\n                \"x\" : (x + i),\n                \"y\" : y,\n                \"pos\": 1\n            }\n            let coordsLeft = {\n                \"x\" : (x - i),\n                \"y\" : y,\n                \"pos\": 2\n            }\n            let coordsTop = {\n                \"x\" : x,\n                \"y\" : (y + i),\n                \"pos\": 3\n            }\n            let coordsBottom = {\n                \"x\" : x,\n                \"y\" : (y - i),\n                \"pos\": 4\n            }\n        possiblePlacements.push(coordsRight, coordsLeft, coordsTop, coordsBottom)\n        }\n        let toRemove = []\n        for (let i = 0; i<possiblePlacements.length; i ++) {\n            if (possiblePlacements[i].x > 10 || possiblePlacements[i].y >10 || possiblePlacements[i].x <1 || possiblePlacements[i].y <1) {\n                toRemove.push(possiblePlacements[i].pos)\n            }\n        }\n\n        toRemove = toRemove.filter((value, index, array) => array.indexOf(value) === index)\n        if (toRemove) {\n            toRemove.forEach(el => {\n                possiblePlacements = possiblePlacements.filter(function(value, index, array){\n                return value.pos !== el\n            }) \n\n            })\n\n        }\n\n        let notUnique = []\n        for (let i = 0; i<possiblePlacements.length; i ++) {\n            this.coordinates.forEach(el => {\n            if (possiblePlacements[i].x == el.x && possiblePlacements[i].y  == el.y) {\n                notUnique.push(possiblePlacements[i].pos)\n            }\n        })\n        }\n\n        notUnique = notUnique.filter((value, index, array) => array.indexOf(value) === index)\n        if (notUnique) {\n            notUnique.forEach(el => {\n                possiblePlacements = possiblePlacements.filter(function(value, index, array){\n                return value.pos !== el\n            }) \n\n            })\n            return possiblePlacements\n        }\n\n\n\n    if (possiblePlacements.length == 0) {return false}\n    else return possiblePlacements\n    },\n\n\n    placeShip(ship, x, y) {\n        let evaluation = this.evaluatePlacement(ship, x, y)\n        if (evaluation == false) return false\n        else {\n            let options = [...new Set(evaluation.map(item=>item.pos))]\n            let selection = options[Math.floor(Math.random() * options.length)]\n            evaluation = evaluation.filter(el => el.pos == selection)\n            let i = evaluation.length\n            evaluation.forEach(el => {\n                let placedShip = {\n                    x: el.x,\n                    y: el.y,\n                    name: ship.name,\n                    hit: false\n                }\n                this.coordinates.push(placedShip)\n            })\n            return evaluation\n        }\n    },\n\n    receiveAttack(x, y) {\n        let hitCheck = this.coordinates.find(element => {\n            if (element.x == x && element.y == y) {\n                return element\n            }})\n        if (hitCheck) {\n            hitCheck.hit = true\n            return hitCheck.name\n        }\n        else {\n            let missedShot = {x, y}\n            this.missedShots.push(missedShot)\n            return {\n                \"missed\" : missedShot\n            }\n        }\n    },\n\n    checkGameEnd() {\n        let result = true\n        this.coordinates.forEach(element => {\n            if (element.hit == false) {\n                result = false\n            }\n        } \n        )\n    return result\n    }\n}\n}\n\nexport {gameboard}","function player (name, cpu) { return {\n\n    name: name,\n    cpu: cpu,\n    currentTurn: false\n}\n}\n\nexport {player}","// create a factory for individual ships\n\nfunction ship (length, name) {return {\n    name: name,\n    length: length,\n    hits: 0,\n    hitReceived() {\n        this.hits = this.hits + 1\n        if (this.length == this.hits) {\n            this.isSunk = true\n        }\n    },\n    isSunk: false,\n}}\n\nexport {ship}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { mainGameLoop} from \"./game.js\";\n\nmainGameLoop()"],"names":[],"sourceRoot":""}